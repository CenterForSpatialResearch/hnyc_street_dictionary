library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
mn <- read_csv("Data/combine_mn1880.csv")
bk <- read_csv("Data/combine_bk1880.csv")
mn$flag <- rep(NA, nrow(mn))
mn$flag[!complete.cases(mn[,c(6:9)])] <- "IN"
mn$flag[(mn$Left_Low %% 2 != mn$Left_High %% 2) == TRUE] <- "EO"
mn$flag[(mn$Right_Low %% 2 != mn$Right_High %% 2) == TRUE] <- "EO"
mn$flag[(abs(mn$Left_High - mn$Right_High) > 10) == TRUE] <- "WN"
mn$flag[(abs(mn$Left_Low - mn$Right_Low) > 10) == TRUE] <- "WN"
write_csv(mn, "Data/mn_seg_flag.csv")
write_csv(mn, "Data/mn_seg_flag1880.csv")
mnr <- mn %>% group_by(ED, Name) %>%
summarise(Min = min(Left_Low, Right_Low), Max = max(Left_High, Right_High))
write_csv(mnr, "Data/mn_seg_add_range1880.csv")
bk$flag <- rep(NA, nrow(bk))
bk$flag[!complete.cases(bk[,c(6:9)])] <- "IN"
bk$flag[(bk$Left_Low %% 2 != bk$Left_High %% 2) == TRUE] <- "EO"
bk$flag[(bk$Right_Low %% 2 != bk$Right_High %% 2) == TRUE] <- "EO"
bk$flag[(abs(bk$Left_High - bk$Right_High) > 10) == TRUE] <- "WN"
bk$flag[(abs(bk$Left_Low - bk$Right_Low) > 10) == TRUE] <- "WN"
bk$flag[(bk$Left_Low %% 2 != bk$Left_High %% 2) == TRUE] <- "EO"
bk$flag[(bk$Right_Low %% 2 != bk$Right_High %% 2) == TRUE] <- "EO"
bk$flag[(abs(bk$Left_High - bk$Right_High) > 10) == TRUE] <- "WN"
bk$flag[(abs(bk$Left_Low - bk$Right_Low) > 10) == TRUE] <- "WN"
write_csv(bk, "Data/bk_seg_flag1880.csv")
bkr <- bk %>% group_by(ED, Name) %>%
summarise(Min = min(Left_Low, Right_Low), Max = max(Left_High, Right_High))
write_csv(bkr, "Data/bk_seg_add_range1880.csv")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
morse_mn <- read_csv("Data/morse_mn1880.csv")
morse_bk <- read_csv("Data/morse_bk1880.csv")
mn_geo <- read_csv("Data/geo_dict_mn1880.csv")
bk_geo <- read_csv("Data/geo_dict_bk1880.csv")
#head(morse_mn)
colnames(morse_mn) <- paste0("St", 0:(ncol(morse_mn)-1), sep = "")
colnames(morse_mn)[1] <- "ED"
morse_mn_list<-gather(data = morse_mn,
key = item,
value = value,
St1:St55)%>% #columns
select(-item)
morse_mn_list<-na.omit(morse_mn_list)
colnames(morse_mn_list)[2]<-"street"
morse_mn_list$source<-"morse"
morse_mn_list$street<-trimws(morse_mn_list$street,"both")
colnames(morse_bk) <- paste0("St", 0:(ncol(morse_bk)-1), sep = "")
colnames(morse_bk)[1] <- "ED"
morse_bk_list<-gather(data = morse_bk,
key = item,
value = value,
St1:St59)%>% #columns
select(-item)
morse_bk_list<-na.omit(morse_bk_list)
colnames(morse_bk_list)[2]<-"street"
morse_bk_list$source<-"morse"
morse_bk_list$street<-trimws(morse_bk_list$street,"both")
#head(mn_geo)
colnames(mn_geo) <- paste0("St", 0:(ncol(mn_geo)-1), sep = "")
colnames(mn_geo)[1] <- "ED"
mn_geo_list<-gather(data = mn_geo,
key = item,
value = value,
St1:St32)%>%
select(-item)
mn_geo_list<-na.omit(mn_geo_list)
colnames(mn_geo_list)[2]<-"street"
mn_geo_list$source<-"morse"
mn_geo_list$street<-trimws(mn_geo_list$street,"both")
colnames(bk_geo) <- paste0("St", 0:(ncol(bk_geo)-1), sep = "")
colnames(bk_geo)[1] <- "ED"
bk_geo_list<-gather(data = bk_geo,
key = item,
value = value,
St1:St48)%>%
select(-item)
bk_geo_list<-na.omit(bk_geo_list)
colnames(bk_geo_list)[2]<-"street"
bk_geo_list$source<-"morse"
bk_geo_list$street<-trimws(bk_geo_list$street,"both")
#left join
missing_MN <- left_join(morse_mn_list, mn_geo_list, by = c("ED","street"))
missing_geo_mn <- missing_MN %>%
filter(is.na(source.y) == TRUE) %>%
select(-c(source.x, source.y))
#left join
missing_MN <- left_join(morse_mn_list, mn_geo_list, by = c("ED","street"))
missing_geo_mn <- missing_MN %>%
filter(is.na(source.y) == TRUE) %>%
select(-c(source.x, source.y))
#left join
missing_BK <- left_join(morse_bk_list, bk_geo_list, by = c("ED","street"))
missing_geo_bk <- missing_BK %>%
filter(is.na(source.y) == TRUE) %>%
select(-c(source.x, source.y))
write_csv(missing_geo_mn, "Data/missing_EDs_mn1880.csv")
write_csv(missing_geo_bk, "Data/missing_EDs_bk1880.csv")
morse_mn <- read_csv("Data/morse_mn1880.csv")
morse_bk <- read_csv("Data/morse_bk1880.csv")
mn_geo <- read_csv("Data/geo_dict_mn1880.csv")
bk_geo <- read_csv("Data/geo_dict_bk1880.csv")
head(morse_mn)
head(mn_geo)
colnames(morse_mn) <- paste0("St", 0:(ncol(morse_mn)-1), sep = "")
colnames(morse_mn)[1] <- "ED"
morse_mn_list<-gather(data = morse_mn,
key = item,
value = value,
Street1:Street55)%>% #columns
select(-item)
colnames(morse_mn) <- paste0("St", 0:(ncol(morse_mn)-1), sep = "")
colnames(morse_mn)[1] <- "ED"
morse_mn_list<-gather(data = morse_mn,
key = item,
value = value,
St1:St55)%>% #columns
select(-item)
morse_mn_list<-na.omit(morse_mn_list)
colnames(morse_mn_list)[2]<-"street"
morse_mn_list$source<-"morse"
morse_mn_list$street<-trimws(morse_mn_list$street,"both")
colnames(morse_bk) <- paste0("St", 0:(ncol(morse_bk)-1), sep = "")
colnames(morse_bk)[1] <- "ED"
morse_bk_list<-gather(data = morse_bk,
key = item,
value = value,
St1:St59)%>% #columns
select(-item)
morse_bk_list<-na.omit(morse_bk_list)
colnames(morse_bk_list)[2]<-"street"
morse_bk_list$source<-"morse"
morse_bk_list$street<-trimws(morse_bk_list$street,"both")
head(morse_mn)
head(morse_bk)
head(mn_geo)
colnames(morse_bk) <- paste0("St", 0:(ncol(morse_bk)-1), sep = "")
colnames(morse_bk)[1] <- "ED"
morse_bk_list<-gather(data = morse_bk,
key = item,
value = value,
St1:St59)%>% #columns
select(-item)
morse_bk_list<-na.omit(morse_bk_list)
colnames(morse_bk_list)[2]<-"street"
morse_bk_list$source<-"morse"
morse_bk_list$street<-trimws(morse_bk_list$street,"both")
head(mn_geo)
colnames(mn_geo) <- paste0("St", 0:(ncol(mn_geo)-1), sep = "")
colnames(mn_geo)[1] <- "ED"
mn_geo_list<-gather(data = mn_geo,
key = item,
value = value,
St1:St80)%>%
select(-item)
mn_geo_list<-na.omit(mn_geo_list)
colnames(mn_geo_list)[2]<-"street"
mn_geo_list$source<-"morse"
mn_geo_list$street<-trimws(mn_geo_list$street,"both")
head(bk_geo)
colnames(bk_geo) <- paste0("St", 0:(ncol(bk_geo)-1), sep = "")
colnames(bk_geo)[1] <- "ED"
bk_geo_list<-gather(data = bk_geo,
key = item,
value = value,
St1:St48)%>%
select(-item)
bk_geo_list<-na.omit(bk_geo_list)
colnames(bk_geo_list)[2]<-"street"
bk_geo_list$source<-"morse"
bk_geo_list$street<-trimws(bk_geo_list$street,"both")
#left join
missing_MN <- left_join(morse_mn_list, mn_geo_list, by = c("ED","street"))
missing_geo_mn <- missing_MN %>%
filter(is.na(source.y) == TRUE) %>%
select(-c(source.x, source.y))
#left join
missing_BK <- left_join(morse_bk_list, bk_geo_list, by = c("ED","street"))
missing_geo_bk <- missing_BK %>%
filter(is.na(source.y) == TRUE) %>%
select(-c(source.x, source.y))
write_csv(missing_geo_mn, "Data/missing_EDs_mn1880.csv")
write_csv(missing_geo_bk, "Data/missing_EDs_bk1880.csv")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
mn_seg <- read_csv("Data/mn_segments_1850export.csv")
bk_seg <- read_csv("Data/bk_segments_1850export.csv")
source("lib/clean_function.R")
mn_seg$MN_STREET1850_FULL_STREE = clean(mn_seg$MN_STREET1850_FULL_STREE)
mn_seg$MN_STREET1850_Y1850NAMEALT = clean(mn_seg$MN_STREET1850_Y1850NAMEALT)
mn_seg$MN_STREET1850_Y1850NAMESTREET = clean(mn_seg$MN_STREET1850_Y1850NAMESTREET)
bk_seg$BK_STREET1850_FULL_STREE = clean(bk_seg$BK_STREET1850_FULL_STREE)
bk_seg$BK_STREET1850_Y1850NAMEALT = clean(bk_seg$BK_STREET1850_Y1850NAMEALT)
bk_seg$BK_STREET1850_Y1850NAMESTREET = clean(bk_seg$BK_STREET1850_Y1850NAMESTREET)
mn_seg <- as_tibble(sapply(mn_seg, toupper))
bk_seg <- as_tibble(sapply(bk_seg, toupper))
head(mn_seg)
head(bk_seg)
colnames(mn_seg) <- c("ObjectID", "Full_Name", "Name1850",
"Left_Low", "Left_High", "Right_Low", "Right_High",
"JoinId", "AltName", "Ward_Right", "Ward_Left")
head(mn_seg)
mn_seg <- mn_seg[c(2, 3, 9, 4, 5, 6, 7, 10, 11, 1, 8)]
mn_seg$Left_Low <- as.numeric(mn_seg$Left_Low)
mn_seg$Left_High <- as.numeric(mn_seg$Left_High)
mn_seg$Right_Low <- as.numeric(mn_seg$Right_Low)
mn_seg$Right_High <- as.numeric(mn_seg$Right_High)
mn_seg$Ward_Right <- as.numeric(mn_seg$Ward_Right)
mn_seg$Ward_Left <- as.numeric(mn_seg$Ward_Left)
head(mn_seg)
colnames(bk_seg) <- c("ObjectID", "Full_Name", "Name1850",
"Left_Low", "Left_High", "Right_Low", "Right_High",
"JoinId", "AltName", "Ward_Right", "Ward_Left")
head(bk_seg)
bk_seg <- bk_seg[c(2, 3, 9, 4, 5, 6, 7, 10, 11, 1, 8)]
bk_seg$Left_Low <- as.numeric(bk_seg$Left_Low)
bk_seg$Left_High <- as.numeric(bk_seg$Left_High)
bk_seg$Right_Low <- as.numeric(bk_seg$Right_Low)
bk_seg$Right_High <- as.numeric(bk_seg$Right_High)
bk_seg$Ward_Right <- as.numeric(bk_seg$Ward_Right)
bk_seg$Ward_Left <- as.numeric(bk_seg$Ward_Left)
head(bk_seg)
mn_seg <- mn_seg %>% rowwise() %>%
mutate(Name = ifelse(Name1850 != "NULL", Name1850,
ifelse(Full_Name != "NULL", Full_Name, AltName))) %>%
ungroup()
#mn_seg <- mn_seg %>% rowwise() %>%
#  mutate(Name = ifelse(Full_Name != "NULL", Full_Name,
#                          ifelse(Name1850 != "NULL", Name1850, AltName))) %>%
#  ungroup()
bk_seg
bk_seg
bk_seg <- bk_seg %>% rowwise() %>%
mutate(Name = ifelse(Name1850 != "NULL", Name1850,
ifelse(Full_Name != "NULL", Full_Name, AltName))) %>%
ungroup()
#bk_seg <- bk_seg %>% rowwise() %>%
#  mutate(Name = ifelse(Full_Name != "NULL", Full_Name,
#                          ifelse(Name1850 != "NULL", Name1850, AltName))) %>%
#  ungroup()
mn_seg <- mn_seg[c(12, 1:11)]
bk_seg <- bk_seg[c(12, 1:11)]
bk_seg <- bk_seg[c(12, 1:11)]
write_csv(mn_seg, "Data/segment_mn1850.csv")
write_csv(bk_seg, "Data/segment_bk1850.csv")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
mn_seg <- read_csv("Data/mn_segments_1850export.csv")
bk_seg <- read_csv("Data/bk_segments_1850export.csv")
source("lib/clean_function.R")
mn_seg$MN_STREET1850_FULL_STREE = clean(mn_seg$MN_STREET1850_FULL_STREE)
mn_seg$MN_STREET1850_Y1850NAMEALT = clean(mn_seg$MN_STREET1850_Y1850NAMEALT)
mn_seg$MN_STREET1850_Y1850NAMESTREET = clean(mn_seg$MN_STREET1850_Y1850NAMESTREET)
bk_seg$BK_STREET1850_FULL_STREE = clean(bk_seg$BK_STREET1850_FULL_STREE)
bk_seg$BK_STREET1850_Y1850NAMEALT = clean(bk_seg$BK_STREET1850_Y1850NAMEALT)
bk_seg$BK_STREET1850_Y1850NAMESTREET = clean(bk_seg$BK_STREET1850_Y1850NAMESTREET)
mn_seg <- as_tibble(sapply(mn_seg, toupper))
bk_seg <- as_tibble(sapply(bk_seg, toupper))
head(mn_seg)
head(bk_seg)
colnames(bk_seg) <- c("ObjectID", "Full_Name", "Name1850",
"Left_Low", "Left_High", "Right_Low", "Right_High",
"JoinId", "AltName", "Ward_Right", "Ward_Left")
head(bk_seg)
bk_seg <- bk_seg[c(2, 3, 9, 4, 5, 6, 7, 10, 11, 1, 8)]
bk_seg$Left_Low <- as.numeric(bk_seg$Left_Low)
bk_seg$Left_High <- as.numeric(bk_seg$Left_High)
bk_seg$Right_Low <- as.numeric(bk_seg$Right_Low)
bk_seg$Right_High <- as.numeric(bk_seg$Right_High)
bk_seg$Ward_Right <- as.numeric(bk_seg$Ward_Right)
bk_seg$Ward_Left <- as.numeric(bk_seg$Ward_Left)
head(bk_seg)
bk_seg
bk_seg <- bk_seg %>% rowwise() %>%
mutate(Name = ifelse(Name1850 != "NULL", Name1850,
ifelse(Full_Name != "NULL", Full_Name, AltName))) %>%
ungroup()
#bk_seg <- bk_seg %>% rowwise() %>%
#  mutate(Name = ifelse(Full_Name != "NULL", Full_Name,
#                          ifelse(Name1850 != "NULL", Name1850, AltName))) %>%
#  ungroup()
bk_seg <- bk_seg[c(12, 1:11)]
#write_csv(mn_seg, "Data/segment_mn1850.csv")
write_csv(bk_seg, "Data/segment_bk1850.csv")
mn_seg_list1 <- mn_seg %>% filter(Ward_Left == Ward_Right) %>%
mutate(Ward = Ward_Right) %>% select(Ward, Name, ObjectID, JoinId)
colnames(mn_seg) <- c("ObjectID", "Full_Name", "Name1850",
"Left_Low", "Left_High", "Right_Low", "Right_High",
"JoinId", "AltName", "Ward_Right", "Ward_Left")
head(mn_seg)
mn_seg <- mn_seg[c(2, 3, 9, 4, 5, 6, 7, 10, 11, 1, 8)]
mn_seg$Left_Low <- as.numeric(mn_seg$Left_Low)
mn_seg$Left_High <- as.numeric(mn_seg$Left_High)
mn_seg$Right_Low <- as.numeric(mn_seg$Right_Low)
mn_seg$Right_High <- as.numeric(mn_seg$Right_High)
mn_seg$Ward_Right <- as.numeric(mn_seg$Ward_Right)
mn_seg$Ward_Left <- as.numeric(mn_seg$Ward_Left)
head(mn_seg)
mn_seg <- mn_seg %>% rowwise() %>%
mutate(Name = ifelse(Name1850 != "NULL", Name1850,
ifelse(Full_Name != "NULL", Full_Name, AltName))) %>%
ungroup()
#mn_seg <- mn_seg %>% rowwise() %>%
#  mutate(Name = ifelse(Full_Name != "NULL", Full_Name,
#                          ifelse(Name1850 != "NULL", Name1850, AltName))) %>%
#  ungroup()
mn_seg <- mn_seg[c(12, 1:11)]
mn_seg_list1 <- mn_seg %>% filter(Ward_Left == Ward_Right) %>%
mutate(Ward = Ward_Right) %>% select(Ward, Name, ObjectID, JoinId)
mn_seg_list2 <- mn_seg %>% filter(Ward_Left != Ward_Right) %>%
select(Name, Ward_Right, ObjectID, JoinId) %>% rename(Ward = Ward_Right)
mn_seg_list2 <- mn_seg_list2[c(2, 1, 3, 4)]
mn_seg_list3 <- mn_seg %>% filter(Ward_Left != Ward_Right) %>%
select(Name, Ward_Left, ObjectID, JoinId) %>% rename(Ward = Ward_Left)
mn_seg_list3 <- mn_seg_list3[c(2, 1, 3, 4)]
mn_seg_list4 <- rbind(mn_seg_list1, mn_seg_list2, mn_seg_list3)
#dim(mn_seg_list4)
mn_seg_list4
mn_seg_list5 <- mn_seg_list4 %>%
spread(key = Ward, value = Name, fill = NA) %>%
select(-ObjectID, -JoinId)
colnames(mn_seg_list5) <- sub("", "Ward", colnames(mn_seg_list5))
mn_seg_list5 <- as.data.frame(mn_seg_list5)
mn_seg_list6 <- apply(mn_seg_list5, 2, sort)
mn_seg_list7 <- lapply(mn_seg_list6, unique)
maxlen <- max(lengths(mn_seg_list7))
B <- lapply(mn_seg_list7, function(lst) c(lst, rep(NA, maxlen - length(lst))))
names(B) <- paste(colnames(mn_seg_list5))
C <- lapply(B, unlist)
my <- as.data.frame(C)
geo_dict<- t(my)
rownames(geo_dict) <- c(1:nrow(geo_dict))
colnames(geo_dict) <- paste0("St", 1:ncol(geo_dict))
Ward <- colnames(my)
Ward <- sub("Ward", "", Ward)
Ward <- as.numeric(Ward)
geo_dict_mn <- as_tibble(cbind(Ward, geo_dict))
geo_dict_mn$Ward <- as.numeric(geo_dict_mn$Ward)
head(geo_dict_mn)
write_csv(geo_dict_mn, "Data/geo_dict_mn1850.csv")
bk_seg
bk_seg_list1 <- bk_seg %>% filter(Ward_Left == Ward_Right) %>%
mutate(Ward = Ward_Right) %>% select(Ward, Name, ObjectID, JoinId)
bk_seg_list2 <- bk_seg %>% filter(Ward_Left != Ward_Right) %>%
select(Name, Ward_Right, ObjectID, JoinId) %>% rename(Ward = Ward_Right)
bk_seg_list2 <- bk_seg_list2[c(2, 1, 3, 4)]
bk_seg_list3 <- bk_seg %>% filter(Ward_Left != Ward_Right) %>%
select(Name, Ward_Left, ObjectID, JoinId) %>% rename(Ward = Ward_Left)
bk_seg_list3 <- bk_seg_list3[c(2, 1, 3, 4)]
bk_seg_list4 <- rbind(bk_seg_list1, bk_seg_list2, bk_seg_list3)
head(bk_seg_list4)
bk_seg_list5 <- bk_seg_list4 %>%
spread(key = Ward, value = Name, fill = NA) %>% select(-ObjectID, -JoinId)
colnames(bk_seg_list5) <- sub("", "Ward", colnames(bk_seg_list5))
bk_seg_list5 <- as.data.frame(bk_seg_list5)
bk_seg_list6 <- apply(bk_seg_list5, 2, sort)
bk_seg_list7 <- lapply(bk_seg_list6, unique)
maxlen <- max(lengths(bk_seg_list7))
B <- lapply(bk_seg_list7, function(lst) c(lst, rep(NA, maxlen - length(lst))))
names(B) <- paste(colnames(bk_seg_list5))
C <- lapply(B, unlist)
my <- as.data.frame(C)
geo_dict<- t(my)
rownames(geo_dict) <- c(1:nrow(geo_dict))
colnames(geo_dict) <- paste0("St", 1:ncol(geo_dict))
Ward <- colnames(my)
Ward <- sub("Ward", "", Ward)
Ward <- as.numeric(Ward)
geo_dict_bk <- as_tibble(cbind(Ward, geo_dict))
geo_dict_bk$Ward <- as.numeric(geo_dict_bk$Ward)
write_csv(geo_dict_bk, "Data/geo_dict_bk1850.csv")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
mn_seg <- read_csv("Data/segment_mn1850.csv")
bk_seg <- read_csv("Data/segment_bk1850.csv")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
mn_seg <- read_csv("Data/segment_mn1850.csv")
bk_seg <- read_csv("Data/segment_bk1850.csv")
## MN
colnames(morse_mn) <- gsub("Street", "St", colnames(morse_mn))
test <- morse_mn
test1 = test %>%
gather(colnames(test)[-1], key = "StreetNum", value = "StreetName")
mn_ed <- na.omit(test1) %>% select(ED, Name = StreetName)
## BK
colnames(morse_bk) <- gsub("Street", "St", colnames(morse_bk))
test <- morse_bk
test1 = test %>%
gather(colnames(test)[-1], key = "StreetNum", value = "StreetName")
bk_ed <- na.omit(test1) %>% select(ED, Name = StreetName)
mn_ed$source <- "Morse"
bk_ed$source <- "Morse"
mn_seg1 <- mn_seg %>% filter(ED_Minus == ED_Plus) %>%
mutate(ED = ED_Minus) %>% select(-ED_Minus, -ED_Plus)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
library(purrr)
#morse_mn <- read_csv("Data/morse_mn.csv")
#morse_bk <- read_csv("Data/morse_bk.csv")
morse_mn
