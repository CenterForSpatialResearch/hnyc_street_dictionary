"Location:",bnb$neighbourhood_cleansed, "<br/>",
"Number of reviews:", bnb$number_of_reviews, "; ",
"Rating:", bnb$review_scores_rating,"<br/>",
"Room type:", bnb$room_type, ";",
"Accomodates:",bnb$accommodates,"; ", "<br/>",
"Bedrooms:", bnb$bedrooms, "; ",
"Bathrooms:", bnb$bathrooms, "<br/>")
d1 <- d %>% addCircleMarkers(lng = ~bnb$longitude, lat = ~bnb$latitude,
color = ~pal2(bnb$price), popup = content,
clusterOptions = markerClusterOptions()) %>%
addLegend("topleft", pal = pal2, values = ~bnb$price, title = "Price",
labFormat = labelFormat(prefix = "$"))
d1
st <- geojsonio::geojson_read("neighbourhoods.geojson", what = "sp")
routes <- readOGR(dsn = "nyc_subway_map/routes_nyc_subway",
layer = "routes_nyc_subway_jan2017")
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5)
cols <- palette(c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", palette = cols, lwd = 3.5)
routes@data$color <- as.factor(routes@data$color)
routes@data$color <- factor(routes@data$color, levels = c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5)
routes@data$color <- as.factor(routes@data$color)
routes@data$color <- factor(routes@data$color, levels = c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
cols <- palette(c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5, palette = cols, legend.col.show = F)
st <- geojsonio::geojson_read("neighbourhoods.geojson", what = "sp")
routes <- readOGR(dsn = "nyc_subway_map/routes_nyc_subway",
layer = "routes_nyc_subway_jan2017")
#routes@data$color <- as.factor(routes@data$color)
#routes@data$color <- factor(routes@data$color, levels = c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
cols <- palette(c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5, palette = cols, legend.col.show = F)
cols <- palette(c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5, palette = cols, legend.col.show = F)
cols <- palette(c("#00933C", "#053159", "#2850AD", "#6CBE45", "#6D6E71", "#808183", "#996633", "#A7A9AC", "#B933AD", "#EE352E", "#FCCC0A", "#FF6319"))
tmap_mode("plot")
tm_shape(st) +
tm_borders(col = "pink", alpha = 1) +
tm_shape(routes) +
tm_lines(col = "color", lwd = 3.5, palette = cols, legend.col.show = F)
install.packages("fuzzyjoin")
install.packages(c("compare", "english", "openxlsx"))
12,672 + 584 + 2129 + 555 + 45 + 100
12672 + 584 + 2129 + 555 + 45 + 100
12672 + 584 + 2129 + 555 + 45 + 100  + 11510
library(shiny)
knitr::opts_chunk$set(error = TRUE, cache = T, message = FALSE, warning = FALSE)
options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(raster)
library(rgdal)
library(tmap)
library(geojsonio)
library(geojsonR)
library(sp)
library(leaflet)
library(ggmap)
library(crosstalk)
library(RColorBrewer)
library(shiny)
library(readxl)
mn_dic <- read_xlsx('Data/streets/Combined Morse and Dan Pull/combined_EDDictionary_MN.xlsx')
knitr::opts_chunk$set(error = TRUE, cache = T, message = FALSE, warning = FALSE)
options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyverse)
library(ggplot2)
library(raster)
library(rgdal)
library(tmap)
library(geojsonio)
library(geojsonR)
library(sp)
library(leaflet)
library(ggmap)
library(crosstalk)
library(RColorBrewer)
library(shiny)
library(readxl)
library(DT)
datatable(mn_dic)
36+37+42
115*0.95
install.packages("shinydashboard")
install.packages("shinydashboard")
library(shinydashboard)
?icon
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
?box
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
install.packages(c("ggthemes", "rmapshaper"))
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/ShooterNYC')
library(shiny)
library(leaflet)
library(geojsonio)
library(lubridate)
library(rmapshaper)
library(ggplot2)
library(ggthemes)
Shooting_data <- read.csv("../data/NYPD_Shooting_modified1.csv")
Shooting_data$Numeric_time = as.numeric(hms(Shooting_data$OCCUR_TIME))/60
neighborhood_map <- geojsonio::geojson_read("Neighborhood Tabulation Areas.geojson",what = "sp")
neighborhood_map <- rmapshaper::ms_simplify(neighborhood_map)
neighborhood_vector = neighborhood_map$ntaname
Animation_matrix = matrix(rep(0,length(neighborhood_vector)*48),ncol = length(neighborhood_vector))
colnames(Animation_matrix) = neighborhood_vector
for(i in 1:dim(Shooting_data)[1]){
time = Shooting_data[i,"Numeric_time"]
nta = Shooting_data[i,"ntaname"]
Animation_matrix[(time%/%30+1),nta] = Animation_matrix[(time%/%30+1),nta]+1
}
Animation_array = rowSums(Animation_matrix)
df.line_chart = data.frame(Time = (0:47)/2,Amount = Animation_array)
Shooting_data <- read.csv("/data/NYPD_Shooting_modified1.csv")
Shooting_data$Numeric_time = as.numeric(hms(Shooting_data$OCCUR_TIME))/60
neighborhood_map <- geojsonio::geojson_read("Neighborhood Tabulation Areas.geojson",what = "sp")
neighborhood_map <- rmapshaper::ms_simplify(neighborhood_map)
neighborhood_vector = neighborhood_map$ntaname
Animation_matrix = matrix(rep(0,length(neighborhood_vector)*48),ncol = length(neighborhood_vector))
colnames(Animation_matrix) = neighborhood_vector
for(i in 1:dim(Shooting_data)[1]){
time = Shooting_data[i,"Numeric_time"]
nta = Shooting_data[i,"ntaname"]
Animation_matrix[(time%/%30+1),nta] = Animation_matrix[(time%/%30+1),nta]+1
}
Animation_array = rowSums(Animation_matrix)
df.line_chart = data.frame(Time = (0:47)/2,Amount = Animation_array)
Shooting_data <- read.csv("../data/NYPD_Shooting_modified1.csv")
Shooting_data$Numeric_time = as.numeric(hms(Shooting_data$OCCUR_TIME))/60
neighborhood_map <- geojsonio::geojson_read("Neighborhood Tabulation Areas.geojson",what = "sp")
neighborhood_map <- rmapshaper::ms_simplify(neighborhood_map)
neighborhood_vector = neighborhood_map$ntaname
Animation_matrix = matrix(rep(0,length(neighborhood_vector)*48),ncol = length(neighborhood_vector))
colnames(Animation_matrix) = neighborhood_vector
for(i in 1:dim(Shooting_data)[1]){
time = Shooting_data[i,"Numeric_time"]
nta = Shooting_data[i,"ntaname"]
Animation_matrix[(time%/%30+1),nta] = Animation_matrix[(time%/%30+1),nta]+1
}
Animation_array = rowSums(Animation_matrix)
df.line_chart = data.frame(Time = (0:47)/2,Amount = Animation_array)
?read.csv
getwd
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
file(file, "rt")
"rt"
?rt
getwd()
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooter.R')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/shooterNYC')
shiny::runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
knitr::opts_chunk$set(error = TRUE, cache = T, message = FALSE, warning = FALSE)
options(mc.cores = parallel::detectCores())
library(leaflet)
library(geojsonio)
library(lubridate)
library(rmapshaper)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(tidyverse)
library(shiny)
library(shinydashboard)
Shooting_data <- read.csv("../data/NYPD_Shooting_modified1.csv")
Shooting_data$OCCUR_DATE<- format(as.Date(Shooting_data$OCCUR_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
Shooting_data$OCCUR_DATE <- as.Date(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_YEAR <- year(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_TIME <- format(strptime(Shooting_data$OCCUR_TIME, "%H:%M:%S"), "%H:%M:%S")
str(Shooting_data)
Shooting_data$OCCUR_DATE<- format(as.Date(Shooting_data$OCCUR_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
Shooting_data$OCCUR_DATE <- as.Date(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_YEAR <- year(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_TIME <- strptime(Shooting_data$OCCUR_TIME, "%H:%M:%S")
str(Shooting_data)
Shooting_data <- read.csv("../data/NYPD_Shooting_modified1.csv")
Shooting_data$OCCUR_DATE<- format(as.Date(Shooting_data$OCCUR_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
Shooting_data$OCCUR_DATE <- as.Date(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_YEAR <- year(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_TIME <- as.hms(strptime(Shooting_data$OCCUR_TIME, "%H:%M:%S"))
library(hms)
Shooting_data$OCCUR_DATE<- format(as.Date(Shooting_data$OCCUR_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
Shooting_data$OCCUR_DATE <- as.Date(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_YEAR <- year(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_TIME <- hms::as.hms(strptime(Shooting_data$OCCUR_TIME, "%H:%M:%S"))
Shooting_data$OCCUR_DATE<- format(as.Date(Shooting_data$OCCUR_DATE, format = "%m/%d/%Y"), "%Y-%m-%d")
Shooting_data$OCCUR_DATE <- as.Date(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_YEAR <- year(Shooting_data$OCCUR_DATE)
Shooting_data$OCCUR_TIME <- hms::as_hms(strptime(Shooting_data$OCCUR_TIME, "%H:%M:%S"))
str(Shooting_data)
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
shiny::runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
shiny::runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
?selectInput
library(shinyWidgets)
install.packages(shinyWidgets)
install.packages("shinyWidgets")
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
str(Shooting_Data)
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
library(crosstalk)
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
?status
?crosstalk::status
?shinydashboard
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
runApp('Documents/QMSS/19Fall/ADS/project2/fall2019-proj2--sec2-grp10/doc/NYCshooting')
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
library(openxlsx)
library(readxl)
library(stringr)
library(fuzzyjoin)
library(tm)
library(english)
library(reshape2)
library(gtools)
library(compare)
# load data
morse_mn1910<-read_csv("MN_MORSE_EDstreet_dict_1910.csv")
mn_original<-read_csv("MN_EDDictionary.csv") %>% select(-X1)
morse_bk1910<-read_csv("BK_MORSE_EDstreet_dict_1910.csv")
bk_original<-read_xlsx("BK_EDDictionary.xlsx")
morse_mn1910<-as.data.frame(sapply(morse_mn1910, toupper))
morse_bk1910<-as.data.frame(sapply(morse_bk1910, toupper))
morse_mn1910$ED<-as.numeric(as.character(morse_mn1910$ED))
morse_bk1910$ED<-as.numeric(as.character(morse_bk1910$ED))
str_clean_streets<-function(x){
x<-gsub("\\<SRT\\>$|\\<SR\\>$\\<SRT\\>$|\\<STR\\>$|\\<SST\\>$|\\<SEET\\>$|\\<TREET\\>$|\\<SHEER\\>$|\\<SHEE\\>$|\\<STREE\\>$|\\<SREET\\>$|\\<REET\\>$|\\<STEE\\>$|\\<ST\\>$","STREET",x)
x<-gsub("\\<N\\>","NORTH",x)
x<-gsub("\\<S\\>","SOUTH",x)
x<-gsub("\\<E\\>","EAST",x)
x<-gsub("\\<W\\>","WEST",x)
x<-gsub("\\<DR\\>|\\<DV\\>|\\<DE\\>$|\\<DRV\\>|\\<DRI\\>|\\<DRIV\\>|\\<DRIE\\>","DRIVE",x)
x<-gsub("\\<CIR\\>|\\<CRL\\>|\\<CIRC\\>|\\<CR\\>|\\<CL\\>|\\<CIRCL\\>|\\<CICLE\\>","CIRCLE",x)
x<-gsub("\\<AVE\\>|\\<AV\\>|\\<AVN\\>|\\<AVEN\\>|\\<AVENU\\>","AVENUE",x)
x<-gsub("\\<CT\\>|\\<CRT\\>|\\<CTR\\>|\\<COUR\\>|\\<COT\\>|\\<CORT\\>","COURT",x)
x<-gsub("\\<BLVD\\>|\\<BVLD\\>|\\<BV\\>|\\<BLD\\>|\\<BD\\>|\\<BL\\>|\\<BLV\\>","BOULEVARD",x)
x<-gsub("\\<RD\\>|\\<RAD\\>|\\<ROD\\>","ROAD",x)
x<-gsub("\\<ALY\\>|\\<AL\\>|\\<ALLY\\>|\\<ALEY\\>|\\<ALLE\\>|\\<AY\\>","ALLEY",x)
x<-gsub("\\<PL\\>|\\<PLC\\>|\\<PLE\\>|\\<PC\\>|\\<PLAC\\>|\\<PLCE\\>|\\<PCE\\>","PLACE",x)
x<-gsub("\\<PK\\>|\\<PRK\\>|\\<PRAK\\>|\\<PAK\\>","PARK",x)
x<-gsub("\\<PKWY\\>|\\<PARKW\\>|\\<PWY\\>|\\<PKW\\>|\\<PRKWY\\>|\\<PKWY\\>|\\<PKW\\>","PARKWAY",x)
x<-gsub("\\<APPR\\>|\\<APR\\>|\\<APPROA\\>|\\<APRCH\\>|\\<APPRCH\\>","APPROACH",x)
x<-gsub("\\<TER\\>|\\<TERR\\>|\\<TRC\\>|\\<TRCE\\>|\\<TR\\>","TERRACE",x)
x<-gsub("\\<PLZ\\>|\\<PLAZ\\>|\\<PZ\\>|\\<PLZA\\>","PLAZA",x)
x<-gsub("\\<LN\\>|\\<LNE\\>|\\<LAN\\>","LANE",x)
x<-gsub("\\<BRG\\>|\\<BRGD\\>|\\<BGE\\>","BRIDGE",x)
x<-gsub("\\<HL\\>|\\<HLL\\>|\\<HIL\\>","HILL",x)
x<-gsub("\\<HTS\\>|\\<HT\\>|\\<HEIGHT\\>|\\<HEGHTS\\>|\\<HHT\\>|\\<HEIGT\\>","HEIGHTS",x)
x<-gsub(".*\\((.*)\\).*", "\\1", x)
x<-str_remove(x,"STREET")
x<-gsub("\\d+\\ - *\\d*|\\d+\\ TO *\\d*|\\d+\\-\\d*","",x) #remove addresses
## dealing with numbered streets
x<-gsub("(\\d)(ST|ND|RD|TH)\\b", "\\1", x)
x<-str_remove(x, "(?<=[0-9])(ST|ND|RD|TH)")
x<-gsub("\\<ONE HUNDRED\\>|\\<ONEHUNDRED\\>|\\<HUNDRED\\>|\\<HUDRED\\>|\\<HUNDED\\>","1",x)
x<-gsub("\\<TWO HUNDRED\\>|\\<TWOHUNDRED\\>","2",x)
x<-gsub("-"," ",x)
x<-gsub("\\<AND\\>"," ",x)
x<-gsub("&"," ",x)
x<-gsub("\\<1ST\\>|\\b1\\b","FIRST",x)
x<-gsub("\\<2ND\\>|\\b2\\b","SECOND",x)
x<-gsub("\\<3RD\\>|\\b3\\b","THIRD",x)
x<-gsub("\\<4TH\\>|\\b4\\b","FOURTH",x)
x<-gsub("\\<5TH\\>|\\b5\\b","FIFTH",x)
x<-gsub("\\<6TH\\>|\\b6\\b","SIXTH",x)
x<-gsub("\\<7TH\\>|\\b7\\b","SEVENTH",x)
x<-gsub("\\<8TH\\>|\\b8\\b","EIGHTH",x)
x<-gsub("\\<9TH\\>|\\b9\\b","NINTH",x)
x<-gsub("\\<10TH\\>|\\b10\\b","TENTH",x)
x<-gsub("\\<11TH\\>|\\b11\\b","ELEVENTH",x)
x<-gsub("\\<12TH\\>|\\b12\\b","TWELFTH",x)
x<-gsub("\\<13TH\\>|\\b13\\b","THIRTEENTH",x)
x<-gsub("\\<14TH\\>|\\b14\\b","FORTEENTH",x)
x<-gsub("\\<15TH\\>|\\b15\\b","FIFTEENTH",x)
x<-gsub("\\<16TH\\>|\\b16\\b","SIXTEENTH",x)
x<-gsub("\\<17TH\\>|\\b17\\b","SEVENTEENTH",x)
x<-gsub("\\<18TH\\>|\\b18\\b","EIGHTEENTH",x)
x<-gsub("\\<19TH\\>|\\b19\\b","NINETEENTH",x)
x<-gsub("\\<TWENTY\\>|\\<TWENTI\\>|\\<TENTI\\>","2",x)
x<-gsub("\\<THIRTY\\>|\\<THIRTHY\\>|\\<THIRTEY\\>|\\<TIRTY\\>|\\<TRITHY\\>","3",x)
x<-gsub("\\<FORTY\\>|\\<FOURTY\\>|\\<FOURTHY\\>|\\<FRTY\\>","4",x)
x<-gsub("\\<FIFTY\\>|\\<FIFTEY\\>|\\<FIFT\\>|\\<FITY\\>|\\<FIFTHY\\>","5",x)
x<-gsub("\\<SIXTY\\>|\\<SXTY\\>|\\<SIXY\\>|\\<SXTY\\>|\\<SIXTHY\\>|\\<SIXTEY\\>","6",x)
x<-gsub("\\<SEVENT\\>|\\<SEVENTY\\>|\\<SEVENTEY\\>|\\<SVENTY\\>|\\<SEVENTI\\>","7",x)
x<-gsub("\\<EIGHTY\\>|\\<EIGHTEY\\>|\\<EIGHTE\\>","8",x)
x<-gsub("\\<UNITY\\>|\\<NINTH\\>|\\<NINETY\\>|\\<NINETEY\\>|\\<NINETIETH\\>|\\<NINTY\\>","9",x)
x<-gsub("\\<FRIST\\>|\\<FIST\\>|\\<FRST\\>|\\<FIRST\\>|\\<ONE\\>","1",x)
x<-gsub("\\<SECOND\\>|\\<SECORD\\>|\\<SCOND\\>|\\<SECOND\\>|\\<TWO\\>","2",x)
x<-gsub("\\<THRID\\>|\\<THIRD\\>|\\<TIRD\\>|\\<TRIHD\\>|\\<THREE\\>","3",x)
x<-gsub("\\<FORTH\\>|\\<FOURTH\\>|\\<FROTH\\>|\\<FROUTH\\>|\\<FOUR\\>","4",x)
x<-gsub("\\<FIFETH\\>|\\<FIFTH\\>|\\<FIFFTH\\>|\\<FIFTHE\\>|\\<FIVE\\>","5",x)
x<-gsub("\\<SIXTH\\>|\\<SXTH\\>|\\<SITH\\>|\\<SIHXT\\>|\\<SIX\\>","6",x)
x<-gsub("\\<SEVENTH\\>|\\<SVEN\\>|\\<SVENTH\\>|\\<SEVENH\\>|\\<SEVENT\\>|\\<SEVEN\\>","7",x)
x<-gsub("\\<EIGHTH\\>|\\<EIGHTEH\\>|\\<EITH\\>|\\<EIGHT\\>","8",x)
x<-gsub("\\<NINETH\\>|\\<NINTH\\>|\\<NINT\\>|\\<NINETH\\>|\\<NINE\\>|\\<NIN\\>","9",x)
x<-gsub("\\<TWENTIETH\\>|\\<TWENTIEFTH\\>","20",x) #NEW
x<-gsub("\\<THIRTIETH\\>|\\<THIRTIEFTH\\>","30",x)
x<-gsub("\\<FORTIETH\\>|\\<FOURTIETH\\>","40",x)
x<-gsub("\\<FIFTIETH\\>","50",x)
x<-gsub("\\<SIXTIETH\\>","60",x)
x<-gsub("\\<SEVENTIETH\\>","70",x)
x<-gsub("\\<EIGHTIETH\\>","80",x)
x<-gsub("\\<NINETIETH\\>|\\<NINTIETH\\>","90",x)
x<-gsub("(?<=\\d) (?=\\d)","",x,perl = T) #new close gaps between all numbers
## place names
##x<-gsub("\\bSTR\\b","", x)
x<-gsub("^\\bST\\b","SAINT", x)
x<-gsub("\\bHOUSE\\b","", x)
x<-gsub("\\bHOSTEL\\b","", x)
x<-gsub("\\bHOTEL\\b","", x)
x<-gsub("\\bLODGE\\b","", x)
x<-gsub("\\bLODGING\\b","", x)
x<-trimws(x, "both")
x<-gsub("\\<N\\>","NORTH",x)
##x<-gsub("\\<ST\\>","",x)
##x<-gsub("\\<STREET\\>","",x)
}
# clean strings separately
morse_mn1910[ , -1] <- apply(morse_mn1910[ , -1], 2, str_clean_streets)
mn_original[ , -1] <- apply(mn_original[ , -1], 2, str_clean_streets)
# join cleaned strings
combined_edict_mn<-left_join(morse_mn1910,mn_original,by="ED")
write_csv(combined_edict_mn, "combined_edict_mn.csv")
# remove duplicates
combined_edict_mn[ , -1] %>% rowwise() %>%
do(data.frame(., unique(.)))
# join cleaned strings
combined_edict_mn<-left_join(morse_mn1910,mn_original,by="ED")
# remove duplicates
combined_edict_mn[ , -1] %>% rowwise() %>%
do(data.frame(., unique(.)))
write_csv(combined_edict_mn, "combined_edict_mn.csv")
# clean strings separately
morse_mn1910[ , -1] <- apply(morse_mn1910[ , -1], 2, str_clean_streets)
mn_original[ , -1] <- apply(mn_original[ , -1], 2, str_clean_streets)
write_csv(morse_mn1910, "morse_mn1910.csv")
write_csv(mn_original, "geo_mn1910.csv")
# join with markers
a <- morse_mn1910
b <- mn_original
a[is.na(a)] <- "ABCDNN"
b[is.na(b)] <- "ABCDNN"
a[ , -1][] <- lapply(a[ , -1], function(x) paste(x, "[M]", sep=" "))
b[ , -1][] <- lapply(b[ , -1], function(x) paste(x, "[G]", sep=" "))
a$ED <- as.character(a$ED)
c <- left_join(a, b, by= "ED")
c[c == "ABCDNN [M]"] <- NA
c[c == "ABCDNN [G]"] <- NA
combined_marker_mn <- c
write_csv(combined_marker_mn, "combined_marker_mn.csv")
# clean strings separately
morse_bk1910[ , -1] <- apply(morse_bk1910[ , -1], 2, str_clean_streets)
bk_original[ , -1] <- apply(bk_original[ , -1], 2, str_clean_streets)
write_csv(morse_bk1910, "morse_bk1910.csv")
write_csv(bk_original, "geo_bk1910.csv")
# join cleaned strings
combined_edict_bk <- left_join(morse_bk1910,bk_original,by="ED")
# remove duplicates
combined_edict_bk[ , -1] %>% rowwise() %>%
do(data.frame(., unique(.)))
write_csv(combined_edict_bk, "combined_edict_bk.csv")
# join with markers
aa <- morse_bk1910
bb <- bk_original
aa[is.na(aa)] <- "ABCDNN"
bb[is.na(bb)] <- "ABCDNN"
aa[ , -1][] <- lapply(aa[ , -1], function(x) paste(x, "[M]", sep=" "))
bb[ , -1][] <- lapply(bb[ , -1], function(x) paste(x, "[G]", sep=" "))
aa$ED <- as.character(aa$ED)
#b$ED <- as.numeric(as.character(b$ED))
cc <- left_join(aa, bb, by= "ED")
cc[cc == "ABCDNN [M]"] <- NA
cc[cc == "ABCDNN [G]"] <- NA
combined_marker_bk <- cc
write_csv(combined_marker_bk, "combined_marker_bk.csv")
shiny::runApp('Documents/QMSS/RA/19Fall/hnyc_street_dictionary/script/Shiny/St.Dict.')
?fluidRow
?selectizeInput
runApp('Documents/QMSS/RA/19Fall/hnyc_street_dictionary/script/Shiny/St.Dict.')
View(bk_original)
runApp('Documents/QMSS/RA/19Fall/hnyc_street_dictionary/script/Shiny/St.Dict.')
str(morse_mn1910)
str(morse_mn1910$ED)
runApp('Documents/QMSS/RA/19Fall/hnyc_street_dictionary/script/Shiny/St.Dict.')
View(morse_mn1910)
str(morse_mn1910)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache = F)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
options(mc.cores = parallel::detectCores())
library(zoo)
library(magrittr)
library(dplyr)
library(tidyverse)
